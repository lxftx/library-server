{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,uCAAuC;AACzE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB,aAAa;AAC7E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA,2CAA2C,IAAI;AAC/C;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC,sBAAsB,UAAU;AAChC;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sCAAsC,QAAQ,GAAG,GAAG;AACpD;AACA;AACA;AACA,2CAA2C,IAAI;AAC/C;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,uCAAuC,QAAQ,GAAG,GAAG;AACrD;AACA;AACA;AACA,2CAA2C,IAAI;AAC/C,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ,GAAG,MAAM;AACtD;AACA;AACA;AACA;AACA,+CAA+C,IAAI;AACnD,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;AClhBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,WAAW;;;;;;UCjD1B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNoC;AACY;AAChD;AACA;AACA,IAAI,gEAAW;AACf,IAAI,0DAAK;AACT,CAAC,E","sources":["webpack:///./src/js/modules/modal.js","webpack:///./src/js/modules/slider_form.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/js/scripts.js"],"sourcesContent":["function modal() {\r\n    const body = document.querySelector('body'), \r\n        modal = document.querySelector('.modal'),\r\n        navigateAuth = document.querySelector('.navigate__auth'),\r\n        formAdd = document.querySelector('.form__add'),\r\n        // domen = window.location.origin,\r\n        domen = \"http://localhost:8000/\",\r\n        // djModel = window.location.pathname.split('/')[window.location.pathname.split('/').length - 1];\r\n        djModel = \"languages\";\r\n\r\n    let acc, text_error, sh_alert = 0;\r\n\r\n    IsLogin();\r\n    closeModal();\r\n\r\n    getData();\r\n\r\n    addEventCreateRecord(formAdd);\r\n\r\n    navigateAuth.addEventListener('click', (e) => {\r\n        if (!IsLogin()) {\r\n            openModal();\r\n            createAuthForm();\r\n            addEventAuthForm(modal);\r\n        } else {\r\n            Logout()\r\n        }\r\n    });\r\n\r\n    function clickBtnCancel() {\r\n        modal.querySelector('.modal__btn-cancel').addEventListener('click', () => {\r\n            closeModal();\r\n        });\r\n    }\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Tab') {\r\n            e.preventDefault();\r\n        };\r\n        if (e.key === 'Escape') {\r\n            closeModal();\r\n        };\r\n    });\r\n\r\n    function openModal() {\r\n        modal.style.display = 'block';\r\n        body.style.overflow = 'hidden';\r\n    }\r\n\r\n    function closeModal() {\r\n        modal.style.display = '';\r\n        body.style.overflow = '';\r\n        clearModal();\r\n    }\r\n\r\n    function formReset() {\r\n        modal.querySelector('.modal__form-error').remove()\r\n        modal.querySelectorAll('input').forEach(item => item.style.borderColor = 'black');\r\n    }\r\n\r\n    function clearModal() {\r\n        modal.querySelectorAll('.modal__form').forEach(item => item.remove());\r\n    }\r\n\r\n    function buttonEndDis(event) {\r\n        const btn = modal.querySelector('button');\r\n        if (event) {\r\n            btn.disabled = true;\r\n            btn.style.backgroundColor = '#cdcdcd';\r\n        } else {\r\n            btn.disabled = false;\r\n            btn.style.backgroundColor = 'black';\r\n        }\r\n    }\r\n\r\n    function IsLogin() {\r\n        if (localStorage.getItem('acc') && localStorage.getItem('dt')) {\r\n            const dateNow = new Date(),\r\n                localDate = new Date(localStorage.getItem('dt'));\r\n            if (localDate > dateNow) {\r\n                document.querySelector('.navigate__auth').querySelector('img').src = \"icons/user-block-alt-svgrepo-com.svg\";\r\n                acc = localStorage.getItem('acc');\r\n                return true;\r\n            };\r\n        };\r\n        return false;\r\n    }\r\n\r\n    // Получаем CSRF-токен из куки\r\n    function getCookie(name) {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Проверяем, соответствует ли кука искомому имени\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    async function authAccount(form) {\r\n        const formData = new FormData(form),\r\n            data = Object.fromEntries(formData.entries());\r\n\r\n        let authStatus = true;\r\n        buttonEndDis(true);\r\n        if (modal.querySelector('.modal__form-error')) formReset();\r\n\r\n        await fetch(domen + \"/users/login/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                    \"X-CSRFToken\": getCookie('csrftoken')\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(data => data.ok ? data.json() : Promise.reject(data))\r\n        .then(data => setAccountParameter(data))\r\n        .then(data => Authenticate(data))\r\n        .catch(data => {\r\n            authStatus = errorHandler(data.status);\r\n            setTimeout(addHtmlTextError, 2000);\r\n        });\r\n\r\n        if (authStatus) {\r\n            closeModal();\r\n            form.reset();\r\n        };\r\n    }\r\n\r\n    function Authenticate(json_data) {\r\n        if (!IsLogin()) {\r\n            acc = json_data.acc;\r\n            navigateAuth.querySelector('img').src = \"icons/user-block-alt-svgrepo-com.svg\";\r\n        };\r\n        return true;\r\n    }\r\n\r\n    function Logout() {\r\n        acc = undefined;\r\n        if (localStorage.getItem('dt')) localStorage.removeItem('dt');\r\n        if (localStorage.getItem('acc')) localStorage.removeItem('acc');\r\n        navigateAuth.querySelector('img').src = \"icons/user-svgrepo-com.svg\";\r\n    }\r\n\r\n    async function getRefreshToken() {\r\n        let refreshStatus = true;\r\n        await fetch(domen + '/users/refresh/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                \"X-CSRFToken\": getCookie('csrftoken')\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({'csrfmiddlewaretoken': crsfToken.value})\r\n        })\r\n        .then(data => data.ok ? data.json() : Promise.reject(data))\r\n        .then(data => setAccountParameter(data))\r\n        .then(data => Authenticate(data))\r\n        .catch(data => {\r\n            refreshStatus = errorHandler(data.status);\r\n            ShowAlert(text_error, \"#f71818c9\");\r\n        });\r\n        return refreshStatus;\r\n    }\r\n\r\n    function IsAuth() {\r\n        if (!acc) {\r\n            ShowAlert(\"Вы не авторизованны!\", \"#ffbd43c9\");\r\n            return false;\r\n        };\r\n        return true;\r\n    }\r\n\r\n    function setAccountParameter(json_data) {\r\n        let dateNow = new Date(),\r\n            dateMillis = dateNow.getTime(),\r\n            timePeriod = \"00:05:00\",\r\n            parts = timePeriod.split(/:/),\r\n            timePeriodMillis = (parseInt(parts[0], 10) * 60 * 60 * 1000) +\r\n                                (parseInt(parts[1], 10) * 60 * 1000) +\r\n                                (parseInt(parts[2], 10) * 1000),\r\n            newDate = new Date();\r\n            newDate.setTime(dateMillis + timePeriodMillis);\r\n\r\n        if (localStorage.getItem('acc') && localStorage.getItem('dt')) {\r\n            if (new Date(localStorage.getItem('dt')) < dateNow) {\r\n                localStorage.setItem('dt', newDate);\r\n                localStorage.setItem('acc' , json_data.acc);\r\n            };\r\n        } else {\r\n            localStorage.setItem('dt', newDate);\r\n            localStorage.setItem('acc' , json_data.acc);\r\n        };\r\n    }\r\n\r\n\r\n    function createAuthForm() {\r\n        const htmlFormAuth = `\r\n        <div class=\"modal__form\">\r\n            <img class=\"modal__btn-cancel\" src=\"icons/cross-svgrepo-com.svg\">\r\n            <form action=\"\" method=\"post\" class=\"form__auth\">\r\n                <div class=\"modal__form-info\">\r\n                    <input class=\"modal__form-input\" name=\"username\" type=\"text\" id=\"#username\" placeholder=\"Имя пользователя\">\r\n                    <input class=\"modal__form-input\" name=\"password\" type=\"password\" id=\"#password\" placeholder=\"Ваш пароль\">\r\n                </div>\r\n                <button class=\"modal__form-btn\" type=\"submit\">Войти!</button>\r\n            </form>\r\n        </div>`;\r\n        modal.innerHTML += htmlFormAuth;\r\n    }\r\n    \r\n\r\n    function addEventAuthForm() {\r\n        clickBtnCancel();\r\n        const formAuth = modal.querySelector('form');\r\n        formAuth.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            authAccount(formAuth);\r\n        });\r\n    }\r\n\r\n    function errorHandler(status) {\r\n        if (status == 400) {\r\n            text_error = \"Ошибка сервера! :(\";\r\n        } else if (status == 401) {\r\n            text_error = 'Имя пользователя и пароль не найдены в системе! :(';\r\n        } else {\r\n            text_error = 'Ошибка сервера! :(';\r\n        };\r\n        return false;\r\n    }\r\n\r\n    function addHtmlTextError() {\r\n        const htmlText = \r\n        `\r\n        <div class=\"modal__form-error\">${text_error}</div>\r\n        `, modalForm = modal.querySelector('.modal__form');\r\n        if (!modalForm.querySelector('.modal__form-error')) {\r\n            modalForm.innerHTML += htmlText;\r\n            modalForm.querySelectorAll('input').forEach(item => item.style.borderColor = 'red');\r\n        };\r\n        addEventAuthForm(modal);\r\n        buttonEndDis(false);\r\n    }\r\n\r\n\r\n    function ShowAlert(message, color) {\r\n        if (sh_alert)  return true; \r\n        const alertWindow = document.createElement('div'),\r\n            alertImg = document.createElement('img'),\r\n            alertText = document.createElement('div');\r\n        \r\n        alertWindow.classList.add('alert');\r\n        alertImg.classList.add('alert-img');\r\n        alertText.classList.add('alert__text');\r\n        \r\n        alertText.textContent = message;\r\n        alertImg.src = \"icons/cross-svgrepo-com.svg\";\r\n        alertWindow.style.backgroundColor = color;\r\n\r\n        alertWindow.append(alertImg, alertText)\r\n        body.prepend(alertWindow);\r\n        let timeOut = setTimeout(() => {HideAlert(alertWindow); sh_alert = 0}, 3000);\r\n\r\n        alertImg.addEventListener('click', () => {\r\n            HideAlert(alertWindow);\r\n            clearTimeout(timeOut);\r\n        })\r\n        sh_alert = 1;\r\n    }\r\n\r\n    function HideAlert(alertSelector) {\r\n        alertSelector.remove();\r\n    }\r\n\r\n    function triggerFormSubmit(form, event_param) {\r\n        // Создаем новое событие submit\r\n        const event = new Event(`${event_param}`, {\r\n            bubbles: true,  // Событие будет всплывать\r\n            cancelable: true  // Событие можно отменить\r\n        });\r\n    \r\n        // Запускаем событие на форме\r\n        form.dispatchEvent(event);\r\n    }\r\n\r\n    function addEventCreateRecord(form) {\r\n        form.addEventListener('submit', async (e) => {\r\n            e.preventDefault();\r\n            createRecord(form)\r\n        });\r\n    }\r\n\r\n    async function createRecord(form) {\r\n        let createStatus = true;\r\n        if (!IsAuth()) return false\r\n        const formData = new FormData(form),\r\n            data = Object.fromEntries(formData.entries());\r\n\r\n        await fetch(domen + `/api/v1/${djModel}/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${acc}`,\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(data => data.ok ? data.json() : Promise.reject(data))\r\n        .then(() => { \r\n            getData(); \r\n            ShowAlert('Успешное сохранение!', '#3bf33bd4');\r\n        })\r\n        .catch(async data => {\r\n            createStatus = false\r\n            if (data.status == 401) {\r\n               if (await getRefreshToken()) {\r\n                    // Ручной запуск submit\r\n                    triggerFormSubmit(formAdd, 'submit');\r\n                };\r\n            } else {\r\n                errorHandler(data.status);\r\n                ShowAlert(text_error, '#f71818c9');\r\n            }; \r\n        });\r\n\r\n        if (createStatus) {\r\n            form.reset();\r\n        };\r\n    }\r\n\r\n    function getData() {\r\n        fetch(domen + `/api/v1/${djModel}/`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"Application/json\"\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(data => data.ok ? data.json() : Promise.reject(data))\r\n        .then(data => updateTable(data))\r\n        .catch(data => {\r\n            errorHandler(data.status);\r\n            ShowAlert(text_error, \"#f71818c9\");\r\n        });\r\n    };\r\n\r\n    function clearTable() {\r\n        const tbody = document.querySelector('tbody'),\r\n            trs = tbody.querySelectorAll('tr');\r\n        trs.forEach((item, index) => {\r\n            if (index != 0) item.remove();\r\n        });\r\n        return tbody;\r\n    }\r\n\r\n    function updateTable(json_data) {\r\n        const tbody = clearTable();\r\n        json_data.forEach((item, index) => {\r\n            const htmlRecords = `\r\n            <tr>\r\n                <td>${index + 1}</td>\r\n                <td>${item.name}</td>\r\n                <td class=\"form\">\r\n                    <button class=\"form__event-open\" value=\"${item.id}\">\r\n                        <img src=\"icons/check-tick-svgrepo-com.svg\">\r\n                    </button>\r\n                    <button class=\"form__event-delete\" value=\"${item.id}\">\r\n                        <img src=\"icons/cancel-20px-svgrepo-com.svg\">\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            `\r\n            tbody.innerHTML += htmlRecords;\r\n            addEventUpdateRecord();\r\n            addEventDeleteRecord();\r\n        })\r\n    }\r\n\r\n    async function deleteRecord(item, id) {\r\n        if (!IsAuth()) return false\r\n        await fetch(domen +`/api/v1/${djModel}/${id}/`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${acc}`,\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(data => data.status == 200 ? data.json() : Promise.reject(data))\r\n        .then(() => getData())\r\n        .then(() => ShowAlert('Успешное удаление!', '#3bf33bd4'))\r\n        .catch(async data => {\r\n            if (data.status == 401) {\r\n                if (await getRefreshToken()) {\r\n                    // Ручной запуск click\r\n                    triggerFormSubmit(item, 'click');\r\n                };\r\n            } else {\r\n                errorHandler(data.status);\r\n                ShowAlert(text_error, '#f71818c9');\r\n            };\r\n        });\r\n    }\r\n\r\n    function addEventDeleteRecord() {\r\n        const btnDelete = document.querySelectorAll('.form__event-delete');\r\n        if (btnDelete.length == 0) return false;\r\n        btnDelete.forEach(item => {\r\n            item.addEventListener('click', (e) => {\r\n                deleteRecord(item, item.value);\r\n            }) \r\n        }) \r\n    }\r\n\r\n    async function getRecordForId(item, id) {\r\n        await fetch(domen + `/api/v1/${djModel}/${id}/`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                \"Authorization\": `Bearer ${acc}`\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(data => data.ok ? data.json() : Promise.reject(data))\r\n        .then(data => createUpdateRecordForm(data))\r\n        // .then(data => updateRecord(data))\r\n        .catch(async (data) => {\r\n            if (data.status == 401) {\r\n                if (await getRefreshToken()) {\r\n                    // Ручной запуск click\r\n                    triggerFormSubmit(item, 'click');\r\n                };\r\n            } else {\r\n                errorHandler(data.status);\r\n                ShowAlert(text_error, '#f71818c9');\r\n            };\r\n        });\r\n    }\r\n\r\n    function updateRecord(dt) {\r\n        const formUpdate = document.querySelector(\".form__update\");\r\n        formUpdate.addEventListener(\"submit\", (e) => {\r\n            e.preventDefault();\r\n            let updateStatus = true;\r\n            const formData = new FormData(formUpdate),\r\n                data = Object.fromEntries(formData.entries());\r\n\r\n            fetch(domen + `/api/v1/${djModel}/${dt.id}/`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                    'X-CSRFToken': getCookie('csrftoken'),\r\n                    \"Authorization\": `Bearer ${acc}`\r\n                },\r\n                credentials: \"include\",\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then(data => data.ok ? getData() : Promise.reject(data))\r\n            .catch( async (data) => {\r\n                if (data.status == 401) {\r\n                    if (await getRefreshToken()) {\r\n                        // Ручной запуск click\r\n                        triggerFormSubmit(formUpdate, 'sumbit');\r\n                    };\r\n                } else {\r\n                    errorHandler(data.status);\r\n                    ShowAlert(text_error, '#f71818c9');\r\n                };\r\n            })\r\n\r\n            if (updateStatus) {\r\n                closeModal();\r\n                ShowAlert(\"Удачное сохранение!\", '#3bf33bd4');\r\n            };\r\n        });\r\n    }\r\n\r\n    function createUpdateRecordForm(data) {\r\n        const formInfo = document.querySelector('.form__add').querySelectorAll('.form__info');\r\n        let inputForm = '';\r\n        formInfo.forEach(item => {\r\n            const tag = item.cloneNode(true);\r\n            inputForm += tag.innerHTML.trim();\r\n        });\r\n\r\n        const htmlFormUpdate =\r\n        ` \r\n        <div class=\"modal__form\">\r\n            <img class=\"modal__btn-cancel\" src=\"icons/cross-svgrepo-com.svg\">\r\n            <form action=\"\" method=\"post\" class=\"form__update\">\r\n                <div class=\"modal__form-info\">\r\n                    ${inputForm}\r\n                </div>\r\n                <button class=\"modal__form-btn\" type=\"submit\">Сохранить!</button>\r\n            </form>\r\n        </div>`;\r\n        modal.innerHTML += htmlFormUpdate;\r\n\r\n\r\n        modal.querySelectorAll('.form__input').forEach(item => {\r\n            item.classList = \"modal__form-input\";\r\n            item.value = data[item.name];\r\n        });\r\n\r\n        openModal();\r\n        clickBtnCancel();\r\n    }\r\n\r\n    function addEventUpdateRecord() {\r\n        const btnUpdate = document.querySelectorAll('.form__event-open');\r\n        if (btnUpdate.length == 0) return false;\r\n        btnUpdate.forEach(item => {\r\n            item.addEventListener('click', (e) => {\r\n                if (!IsAuth()) return false\r\n                getRecordForId(item, item.value);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default modal;","function slider_form() {\r\n    const contentBlocks = document.querySelectorAll('.content__block'),\r\n        inner = document.querySelector('.content__block-inner'),\r\n        prevButton = document.querySelector('.prev'),\r\n        nextButton = document.querySelector('.next'),\r\n        listTd = document.querySelectorAll('td'),\r\n        form = document.querySelector('form');\r\n    let indexBlock = 1;\r\n    inner.style.width = contentBlocks.length * 100 + '%';\r\n    const width = window.getComputedStyle(inner).width.match(/\\d+/g)[0] / 2;\r\n    \r\n    listTd.forEach(item => {\r\n        if (item.textContent.search(\"None\") != -1) {\r\n            item.textContent = item.textContent.replace(\"None\", \"\").trim();\r\n        };\r\n    });\r\n\r\n    flipBlocks(0);\r\n\r\n    prevButton.addEventListener('click', () => {\r\n        flipBlocks(indexBlock += -1);\r\n    });\r\n\r\n    nextButton.addEventListener('click', () => {\r\n        flipBlocks(indexBlock += 1);\r\n    });\r\n\r\n    function flipBlocks () {\r\n        if (indexBlock > contentBlocks.length) indexBlock = 1;\r\n        if (indexBlock < 1) indexBlock = contentBlocks.length;\r\n\r\n        const offer = width * (indexBlock - 1);\r\n        inner.style.transform = `translateX(-${offer}px)`; \r\n        \r\n        contentBlocks.forEach(item => {\r\n            if (item == contentBlocks[indexBlock - 1]) {\r\n                item.style.height = '';\r\n            } else {\r\n                item.style.height = '0';\r\n            }; \r\n        });\r\n    }\r\n\r\n    form.addEventListener('submit', (event) => {\r\n        event.preventDefault();\r\n        console.log(document.URL);\r\n    });\r\n}\r\n\r\nexport default slider_form;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import modal from \"./modules/modal\";\r\nimport slider_form from \"./modules/slider_form\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    slider_form();\r\n    modal();\r\n});"],"names":[],"sourceRoot":""}